# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  nestjs-backend:
    build:
      context: .
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
    networks:
      - dokploy-network
    expose:
      - 3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.nestjs-backend.rule=Host(`${TRAEFIK_HOST}`)
      - traefik.http.routers.nestjs-backend.entrypoints=web
      - traefik.http.services.nestjs-backend.loadbalancer.server.port=3000

  redis:
    image: redis:8.0.2-alpine
    networks:
      - dokploy-network
    volumes:
      - redis_data:/data

networks:
  dokploy-network:
    external: true
volumes:
  redis_data:

